// Package education provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package education

// Defines values for CourseDomain.
const (
	Business            CourseDomain = "business"
	DataScience         CourseDomain = "data_science"
	Design              CourseDomain = "design"
	HealthFitness       CourseDomain = "health_fitness"
	Language            CourseDomain = "language"
	Marketing           CourseDomain = "marketing"
	Music               CourseDomain = "music"
	PersonalDevelopment CourseDomain = "personal_development"
	Photography         CourseDomain = "photography"
	Programming         CourseDomain = "programming"
)

// Defines values for CourseLevel.
const (
	CourseLevelAdvanced     CourseLevel = "advanced"
	CourseLevelBeginner     CourseLevel = "beginner"
	CourseLevelIntermediate CourseLevel = "intermediate"
)

// Defines values for CourseTag.
const (
	CourseTagAdvanced         CourseTag = "advanced"
	CourseTagAi               CourseTag = "ai"
	CourseTagApi              CourseTag = "api"
	CourseTagBackend          CourseTag = "backend"
	CourseTagBeginnerFriendly CourseTag = "beginner_friendly"
	CourseTagCertified        CourseTag = "certified"
	CourseTagCloud            CourseTag = "cloud"
	CourseTagDatabase         CourseTag = "database"
	CourseTagDevops           CourseTag = "devops"
	CourseTagFree             CourseTag = "free"
	CourseTagFrontend         CourseTag = "frontend"
	CourseTagFullstack        CourseTag = "fullstack"
	CourseTagGameDevelopment  CourseTag = "game_development"
	CourseTagMachineLearning  CourseTag = "machine_learning"
	CourseTagMobile           CourseTag = "mobile"
	CourseTagPaid             CourseTag = "paid"
	CourseTagSecurity         CourseTag = "security"
	CourseTagTesting          CourseTag = "testing"
	CourseTagWebDevelopment   CourseTag = "web_development"
)

// Course defines model for Course.
type Course struct {
	// Description Detailed description of the course
	Description *string `json:"description,omitempty"`

	// Domain Domain/category of the course
	Domain CourseDomain `json:"domain"`

	// Duration Duration of the course in minutes
	Duration int `json:"duration"`

	// Id Unique identifier for the course
	Id string `json:"id"`

	// Level Difficulty level of the course
	Level CourseLevel `json:"level"`

	// Rating Average rating of the course
	Rating float32 `json:"rating"`

	// Tags List of tags associated with the course
	Tags *[]CourseTag `json:"tags,omitempty"`

	// TeacherId Unique identifier of the teacher who created the course
	TeacherId string `json:"teacherId"`

	// Thumbnail URL to the course thumbnail image
	Thumbnail *string `json:"thumbnail,omitempty"`

	// Title Title of the course
	Title string `json:"title"`
}

// CourseDomain Domain/category of the course
type CourseDomain string

// CourseLevel Difficulty level of the course
type CourseLevel string

// CourseTag Tags for categorizing and filtering courses
type CourseTag string

// CreateCourseRequest defines model for CreateCourseRequest.
type CreateCourseRequest struct {
	// Description Detailed description of the course
	Description *string `json:"description,omitempty"`

	// Domain Domain/category of the course
	Domain CourseDomain `json:"domain"`

	// Duration Duration of the course in minutes
	Duration int `json:"duration"`

	// Level Difficulty level of the course
	Level CourseLevel `json:"level"`

	// Rating Initial rating of the course
	Rating *float32 `json:"rating,omitempty"`

	// Tags List of tags associated with the course
	Tags *[]CourseTag `json:"tags,omitempty"`

	// TeacherId Unique identifier of the teacher creating the course
	TeacherId string `json:"teacherId"`

	// Thumbnail URL to the course thumbnail image
	Thumbnail *string `json:"thumbnail,omitempty"`

	// Title Title of the course
	Title string `json:"title"`
}

// Error defines model for Error.
type Error struct {
	Message string `json:"message"`
	Slug    string `json:"slug"`
}

// UpdateCourseRequest defines model for UpdateCourseRequest.
type UpdateCourseRequest struct {
	// Description Detailed description of the course
	Description *string `json:"description,omitempty"`

	// Domain Domain/category of the course
	Domain *CourseDomain `json:"domain,omitempty"`

	// Duration Duration of the course in minutes
	Duration *int `json:"duration,omitempty"`

	// Level Difficulty level of the course
	Level *CourseLevel `json:"level,omitempty"`

	// Rating Updated rating of the course
	Rating *float32 `json:"rating,omitempty"`

	// Tags List of tags associated with the course
	Tags *[]CourseTag `json:"tags,omitempty"`

	// Thumbnail URL to the course thumbnail image
	Thumbnail *string `json:"thumbnail,omitempty"`

	// Title Title of the course
	Title *string `json:"title,omitempty"`
}

// GetCoursesParams defines parameters for GetCourses.
type GetCoursesParams struct {
	// Domain Filter by course domain
	Domain *CourseDomain `form:"domain,omitempty" json:"domain,omitempty"`

	// Level Filter by course level
	Level *CourseLevel `form:"level,omitempty" json:"level,omitempty"`

	// Tag Filter by course tag
	Tag *CourseTag `form:"tag,omitempty" json:"tag,omitempty"`
}

// CreateCourseJSONRequestBody defines body for CreateCourse for application/json ContentType.
type CreateCourseJSONRequestBody = CreateCourseRequest

// UpdateCourseJSONRequestBody defines body for UpdateCourse for application/json ContentType.
type UpdateCourseJSONRequestBody = UpdateCourseRequest
